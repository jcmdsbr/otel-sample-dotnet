version: '3.7'

services:

  otel.sample.bff:
    image: ${DOCKER_REGISTRY-}otelsamplebff
    container_name: bff-service
    build:
      context: .
      dockerfile: Otel.Sample.Bff/Dockerfile
    environment:
      - Services__Customer=https://otel.sample.webservice
      - Services__Product=http://otel.sample.grpc
      - Otlp__Endpoint=http://otel-collector:4317
    depends_on:
      - otel.sample.grpc
      - otel.sample.workerservice
      - otel.sample.webservice

  otel.sample.grpc:
    image: ${DOCKER_REGISTRY-}otelsamplegrpc
    container_name: grpc-service
    build:
      context: .
      dockerfile: Otel.Sample.gRPC/Dockerfile
    environment:
      - ConnectionStrings__Mongo=mongodb://mongo:27017 
      - Otlp__Endpoint=http://otel-collector:4317
    depends_on:
      - mongo

  otel.sample.workerservice:
    image: ${DOCKER_REGISTRY-}otelsampleworkerservice
    container_name: worker-service
    build:
      context: .
      dockerfile: Otel.Sample.WorkerService/Dockerfile
    environment:
      - ConnectionStrings__Redis=redis:6379  
      - Rabbit__HostName=rabbitmq
      - Otlp__Endpoint=http://otel-collector:4317
    depends_on:
      - redis
      - rabbitmq

  otel.sample.webservice:
    image: ${DOCKER_REGISTRY-}otelsamplewebservice
    container_name: web-service
    build:
      context: .
      dockerfile: Otel.Sample.WebService/Dockerfile
    environment:
      - ConnectionStrings__Redis=redis:6379  
      - Rabbit__HostName=rabbitmq
      - Otlp__Endpoint=http://otel-collector:4317
    depends_on:
      - redis
      - rabbitmq

  loki:
    image: grafana/loki:latest
    restart: always
    container_name: loki
    ports:
      - 3100:3100

  prometheus:
    container_name: prometheus
    restart: always
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  promtail:
    container_name: promtail
    restart: always
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log

  grafana:
    container_name: grafana
    restart: always
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki

  jaeger-all-in-one:
    container_name: jaeger 
    restart: always  
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268"
      - "14250"      
  
  otel-collector:
    container_name: otel-collector
    restart: always
    image: otel/opentelemetry-collector-contrib:0.76.1
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55670:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - prometheus
      - loki 
 
  redis:
    container_name: redis  
    restart: always
    image: redis:latest
    ports:
      - "6379:6379"    
  
  rabbitmq:
    container_name: rabbitmq
    restart: always
    image: rabbitmq:management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"

  mongo:
    container_name: mongo
    restart: always
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

volumes:
  grafana_data:
  mongo_data:


